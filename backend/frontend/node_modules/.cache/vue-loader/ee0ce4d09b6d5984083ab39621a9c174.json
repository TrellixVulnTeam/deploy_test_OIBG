{"remainingRequest":"C:\\test\\S05P13B202-develope\\backend\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\test\\S05P13B202-develope\\backend\\frontend\\src\\views\\map\\map.vue?vue&type=style&index=0&id=26e8a480&lang=css","dependencies":[{"path":"C:\\test\\S05P13B202-develope\\backend\\frontend\\src\\views\\map\\map.vue","mtime":1629029464000},{"path":"C:\\test\\S05P13B202-develope\\backend\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test\\S05P13B202-develope\\backend\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1628298225000},{"path":"C:\\test\\S05P13B202-develope\\backend\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\test\\S05P13B202-develope\\backend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test\\S05P13B202-develope\\backend\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNtYXAgewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7Cn0KLm1hcC1jb250YWluZXJ7CiAgICBoZWlnaHQ6ICAxMDAlOwp9Cg=="},{"version":3,"sources":["C:\\test\\S05P13B202-develope\\backend\\frontend\\src\\views\\map\\map.vue"],"names":[],"mappings":";AAmgBA,CAAC,CAAC,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACjB","file":"C:/test/S05P13B202-develope/backend/frontend/src/views/map/map.vue","sourceRoot":"","sourcesContent":["<template>\n    <el-row class=\"map-container\">\n        <el-col :span=\"7\">\n            \n                <el-tabs type=\"border-card\" @tab-click=\"handleTabClick\">\n                <el-tab-pane label=\"전체 보기\">\n                    <el-scrollbar height=\"650px\">\n                <!-- <div v-if=\"!state.dialogVisible\">{{ state.dialogVisible }}</div> -->\n                <!-- <div v-if=\"!state.dialogVisible\">{{ state.SeniorCenterInfo[0].seniorId }}</div> --> \n                    <table>\n                        <thead></thead>\n                        <tbody>\n                    <tr v-bind:key=\"s\" v-for=\"s in state.SeniorCenterInfo\" @click=\"loadModal(s)\">\n                    <td>\n                        <img src=\"https://kr.seaicons.com/wp-content/uploads/2015/06/house-icon.png\" alt=\"My Image\" width=\"100\">\n                    </td>\n                    <td>\n                            이름 : {{ s.seniorName }}<br>\n                            주소 : {{ s.seniorAddress }}<br>\n                    </td>\n                    </tr>\n                        </tbody>\n                    </table>\n            </el-scrollbar>\n                </el-tab-pane>\n\n                <el-tab-pane label=\"자주 가는 순\">\n                    <el-scrollbar height=\"650px\">\n                    <table>\n                        <thead></thead>\n                        <tbody>\n                    <tr v-bind:key=\"s\" v-for=\"s in state.FrequenceSeniorCenterInfo\" @click=\"loadModal(s)\">\n                    <td>\n                        <img src=\"https://kr.seaicons.com/wp-content/uploads/2015/06/house-icon.png\" alt=\"My Image\" width=\"100\">\n                    </td>\n                    <td>\n                            이름 : {{ s.seniorName }}<br>\n                            주소 : {{ s.seniorAddress }}<br>\n                    </td>\n                    </tr>\n                        </tbody>\n                    </table>\n            </el-scrollbar>\n                </el-tab-pane>\n                <el-tab-pane label=\"인원수 많은 순\">\n                    <el-scrollbar height=\"650px\">\n                        <table>\n                        <tbody>\n                            <tr v-bind:key=\"s\" v-for=\"s in state.mostPeopleCenterInfo\" @click=\"loadModal(s)\">\n                                <td>\n                                    <img src=\"https://kr.seaicons.com/wp-content/uploads/2015/06/house-icon.png\" alt=\"My Image\" width=\"100\">\n                                </td>\n                                <td>\n                                    이름 : {{ s.seniorName }}<br>\n                                    주소 : {{ s.seniorAddress }}<br>\n                                </td>\n                            </tr>\n                        </tbody>\n                        </table>\n                    </el-scrollbar>\n                </el-tab-pane>\n            </el-tabs>\n\n\n        </el-col>\n        <BackButton/>\n        <el-col :span=\"17\">\n            <div id=\"map\" style=\"z-index:0\"></div>\n        </el-col>\n    </el-row>\n\n    <!--모달창 -->\n    <SeniorCenterModal\n    :centerInfo=\"state.ClickedSeniorCenter\"\n    :visible=\"state.dialogVisible\"\n    @closeCenterDialog=\"onCloseCenterDialog\"\n    :personnelList=\"state.personnelList\"\n    />\n\n</template>\n\n<script>\nimport { reactive, onMounted} from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport SeniorCenterModal from './components/seniorCenterModal'\nimport BackButton from '@/views/components/BackButton'\nimport axios from 'axios';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst OPENVIDU_SERVER_URL = process.env.VUE_APP_OPENVIDU_SERVER_URL\nconst OPENVIDU_SERVER_SECRET = process.env.VUE_APP_OPENVIDU_SERVER_SECRET\nexport default {\n    name: 'Map',\n    // data() {\n    //     return {  \n    //         dialogVisible: false,\n    //         SeniorCenterInfo : [],\n    //     };\n    // },\n    components: {\n        SeniorCenterModal,\n        BackButton\n    },\n    setup() {\n        const router = useRouter()\n        const store = useStore()\n        const state = reactive({\n            \n            dialogVisible: false,\n            SeniorCenterInfo : [], \n            FrequenceSeniorCenterInfo : [],\n            mostPeopleCenterInfo : [],\n            ClickedSeniorCenter : {},\n            enterInfo :{\n                seniorId : 0,\n                userId : '',\n            },\n            personnelList: [],\n        })\n\n\n\n\n        const clickDialogVisible = () => {\n            state.dialogVisible = !state.dialogVisible\n        }\n\n        const initMap = () => {\n\n            console.log('123',state.dialogVisible)\n            console.log(1+\" \"+window.kakao);\n            var mapContainer = document.getElementById('map'), // 지도를 표시할 div \n            mapOption = {\n                center: new window.kakao.maps.LatLng(33.450701, 126.570667),\n                level: 3 // 지도의 확대 레벨\n            };  \n\n            // 지도를 생성합니다    \n            var map = new  window.kakao.maps.Map(mapContainer, mapOption); \n\n\n            // 다른 이미지로 마커 생성하기\n            var imageSrc = \"https://kr.seaicons.com/wp-content/uploads/2015/06/house-icon.png\", // 마커이미지의 주소입니다\n            imageSize = new window.kakao.maps.Size(64, 69), // 마커이미지의 크기입니다\n            imageOption = {offset: new window.kakao.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n\n            // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\n            var markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\n                // markerPosition = new window.kakao.maps.LatLng(37.54699, 127.09598); // 마커가 표시될 위치입니다\n\n            // 주소-좌표 변환 객체를 생성합니다\n            var geocoder = new  window.kakao.maps.services.Geocoder();\n\n            // 반복문 시작\n            for (var i = 0; i < state.SeniorCenterInfo.length; i++) {\n            //  console.log(state.SeniorCenterInfo.length);\n            // console.log(state.SeniorCenterInfo[i].seniorAddress);\n            // console.log(state.SeniorCenterInfo[i].seniorName);\n            // 주소로 좌표를 검색합니다\n\n            let address = state.SeniorCenterInfo[i].seniorAddress; // i번방에 들어있는 경로당 주소\n            let name = state.SeniorCenterInfo[i].seniorName; // i번방에 들어있는 경로당 이름\n            let roomInfo = state.SeniorCenterInfo[i];\n            \n\n            \n            geocoder.addressSearch(address, function(result, status) {\n\n                // console.log(name);\n                // 정상적으로 검색이 완료됐으면 \n                if (status ===  window.kakao.maps.services.Status.OK) {\n\n                    var coords = new window.kakao.maps.LatLng(result[0].y,result[0].x);\n\n                    // 결과값으로 받은 위치를 마커로 표시합니다\n                    var marker = new window.kakao.maps.Marker({\n                        map: map,\n                        position: coords,\n                        // position: markerPosition, \n                        image: markerImage, // 마커이미지 설정\n                        clickable: true \n                    });\n                \n                    window.myMarker = marker\n                    // 마커가 지도 위에 표시되도록 설정합니다.\n                    marker.setMap(map);\n\n                    // 마커에 커서가 오버됐을 때 마커 위에 표시할 인포윈도우를 생성합니다\n                    // var iwContent = <div style=\"padding:5px;\">${name}</div>; // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n                    \n                    \n\n                    // 인포윈도우를 생성 합니다\n                    var infowindow = new window.kakao.maps.InfoWindow({\n                        content : `<div style=\"width:150px;text-align:center;padding:6px 0;\">${name}</div>`, // 백틱(`)\n                        // content : iwContent\n                    });\n\n                    // 마커에 마우스오버 이벤트를 등록합니다\n                    window.kakao.maps.event.addListener(marker, 'mouseover', function() {\n                    // 마커에 마우스오버 이벤트가 발생하면 인포윈도우를 마커위에 표시합니다\n                        infowindow.open(map, marker);\n                    });\n\n                    // 마커에 마우스아웃 이벤트를 등록합니다\n                    window.kakao.maps.event.addListener(marker, 'mouseout', function() {\n                        // 마커에 마우스아웃 이벤트가 발생하면 인포윈도우를 제거합니다\n                        infowindow.close();\n                    });\n                    // 마커에 클릭이벤트를 등록합니다\n                    window.kakao.maps.event.addListener(marker, 'click', function() {\n                        console.log(marker)\n                        marker.fa.addEventListener(\"click\", function() {\n                            state.ClickedSeniorCenter = roomInfo;\n                            getNumOfPeople()\n                    })\n                    });\n                \n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n                    map.setCenter(coords);\n                } \n            });\n        }\n        }\n\n        const getNumOfPeople = () => {\n            const personnelListTmp = [0, 0, 0, 0, 0]\n            store.commit('root/loadingOn')\n            axios\n                .get(`${OPENVIDU_SERVER_URL}/openvidu/api/sessions`,{\n                    auth: {\n                        username: 'OPENVIDUAPP',\n                        password: OPENVIDU_SERVER_SECRET\n                    }\n                })\n                .then(res => {\n                    store.commit('root/loadingOff')\n                    console.log(res.data)\n                    const sessions = res.data.content\n                    const sessionId = String(state.ClickedSeniorCenter.seniorId)\n                    sessions.forEach(session => {\n                        const split_str = session.id.split('-')\n                        if (sessionId == split_str[0]) {\n                            const index = parseInt(split_str[1])\n                            personnelListTmp[index] = session.connections.numberOfElements\n                        }\n                    }); \n                    state.personnelList = personnelListTmp\n                    console.log(state.personnelList)\n                    state.dialogVisible = true\n                })\n                .catch((err) => {\n                    store.commit('root/loadingOff')\n                    alert(err)\n                })\n        }\n\n        const clickEnter = () => {\n            state.enterInfo.userId = store.getters['root/getMyId']\n            state.enterInfo.seniorId = state.ClickedSeniorCenter.seniorId\n            console.log(state.enterInfo)\n            store.dispatch('root/requestEnter', state.enterInfo)\n            .then(result => {\n            console.log(result)\n            })\n            .then(() => {\n                router.push({\n                name: 'SeniorCenter' // 해당 노인정으로 보내기\n                })\n            })\n        }\n\n        onMounted(() => {\n            const userId = store.getters['root/getMyId']\n            store.dispatch('root/requestSeniorCenterInfo', {userId : userId})\n            .then(result => {\n                // console.log(result);\n                state.SeniorCenterInfo = result.data.data;\n                console.log(state.SeniorCenterInfo)\n                    if (window.kakao && window.kakao.maps) {\n                console.log(window.kakao);\n                initMap();\n            } else {\n                const script = document.createElement('script');\n                \n                script.onload = () => window.kakao.maps.load(initMap);\n                script.src = 'http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=7c87159e377575ded609810fe7d11d0a&libraries=services';\n                document.head.appendChild(script);\n            }\n            })\n\n\n            store.dispatch('root/requestFrequenceSeniorCenterInfo', {userId : userId})\n            .then(result => {\n                // console.log(result);\n                state.FrequenceSeniorCenterInfo = result.data.data;\n                console.log(\"fsci\"+\" \"+state.FrequenceSeniorCenterInfo);\n            //     if (window.kakao && window.kakao.maps) {\n            //     console.log(window.kakao);\n            //     console.log(\"len\"+\" \"+state.FrequenceSeniorCenterInfo.length);\n            //     initMap();\n            //      } else {\n            //     const script = document.createElement('script');\n                \n            //     script.onload = () => window.kakao.maps.load(initMap);\n            //     script.src = 'http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=7c87159e377575ded609810fe7d11d0a&libraries=services';\n            //     document.head.appendChild(script);\n            // }\n            })\n\n            // if (window.kakao && window.kakao.maps) {\n            //     console.log(window.kakao);\n            //     console.log(\"len\"+\" \"+state.SeniorCenterInfo.length);\n            //     initMap();\n            // } else {\n            //     const script = document.createElement('script');\n                \n            //     script.onload = () => window.kakao.maps.load(initMap);\n            //     script.src = 'http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=7c87159e377575ded609810fe7d11d0a&libraries=services';\n            //     document.head.appendChild(script);\n            // }        \n        })\n        const onCloseCenterDialog = () => {\n            state.dialogVisible = false\n        }\n\n        const loadModal = (centerObject) => {\n            state.ClickedSeniorCenter = centerObject;\n            getNumOfPeople()\n        }\n        const clickMostPeople = () => {\n            const sessionPeopleObject = {}\n            store.commit('root/loadingOn')\n            axios\n            .get(`${OPENVIDU_SERVER_URL}/openvidu/api/sessions`,{\n                auth: {\n                    username: 'OPENVIDUAPP',\n                    password: OPENVIDU_SERVER_SECRET\n                }\n            })\n            .then(res => {\n                store.commit('root/loadingOff')\n                const sessions = res.data.content\n                sessions.forEach(session => {\n                    const sessionId = session.id.split('-')[0]\n                    if (!sessionPeopleObject[sessionId]) {\n                        sessionPeopleObject[sessionId] = 0\n                    }\n                    sessionPeopleObject[sessionId] += session.connections.numberOfElements\n                }); \n                const sortedList = []\n                for(let id in sessionPeopleObject) {\n                    sortedList.push([id, sessionPeopleObject[id]])\n                }\n                sortedList.sort((a, b) => {\n                    return a[1] - b[1]\n                })\n                const mostPeopleCenterTmp = []\n                sortedList.forEach(centerId => {\n                    let id = parseInt(centerId[0])\n\n                    for(let i = 0; i < state.SeniorCenterInfo.length; i++) {\n                        if (state.SeniorCenterInfo[i]['seniorId'] == id) {\n                            mostPeopleCenterTmp.push(state.SeniorCenterInfo[i])\n                            break\n                        }\n                    }\n                })\n                state.mostPeopleCenterInfo = mostPeopleCenterTmp\n            })\n            .catch((err) => {\n                store.commit('root/loadingOff')\n                alert(err)\n            })\n        }\n        const handleTabClick = (tab) => {\n            if (tab.props.label == '인원수 많은 순') {\n                clickMostPeople()\n            }\n        }\n\n        return{state, clickDialogVisible,clickEnter,initMap, onCloseCenterDialog, loadModal, clickMostPeople, handleTabClick}\n\n    },\n\n    // mounted() {\n    //     // this.$store.dispatch('root/requestSeniorCenterInfo');\n        \n    //     if (window.kakao && window.kakao.maps) {\n    //         console.log(window.kakao);\n    //         this.initMap();\n    //     } else {\n    //         const script = document.createElement('script');\n            \n    //         script.onload = () => window.kakao.maps.load(this.initMap);\n    //         script.src = 'http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=7c87159e377575ded609810fe7d11d0a&libraries=services';\n    //         document.head.appendChild(script);\n    //     }\n    // },\n    // methods: {\n    //     clickDialogVisible() {\n    //         this.dialogVisible = !this.dialogVisible\n    //     },\n    //     initMap() {\n    //         console.log('123',this.dialogVisible)\n    //         console.log(1+\" \"+window.kakao);\n    //         var mapContainer = document.getElementById('map'), // 지도를 표시할 div \n    //         mapOption = {\n    //             center: new window.kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\n    //             level: 3 // 지도의 확대 레벨\n    //         };  \n\n    //         // 지도를 생성합니다    \n    //         var map = new  window.kakao.maps.Map(mapContainer, mapOption); \n\n\n    //         // 다른 이미지로 마커 생성하기\n    //         var imageSrc = \"https://kr.seaicons.com/wp-content/uploads/2015/06/house-icon.png\", // 마커이미지의 주소입니다\n    //         imageSize = new window.kakao.maps.Size(64, 69), // 마커이미지의 크기입니다\n    //         imageOption = {offset: new window.kakao.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n\n    //         // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\n    //         var markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n    //             markerPosition = new window.kakao.maps.LatLng(37.54699, 127.09598); // 마커가 표시될 위치입니다\n\n    //         // 주소-좌표 변환 객체를 생성합니다\n    //         var geocoder = new  window.kakao.maps.services.Geocoder();\n    //         // 주소로 좌표를 검색합니다\n    //         geocoder.addressSearch('서울특별시 종로구 재동 54-1번지', function(result, status) {\n    //             console.log('ddd', window.document)\n    //             // 정상적으로 검색이 완료됐으면 \n    //             if (status ===  window.kakao.maps.services.Status.OK) {\n\n    //                 var coords = new window.kakao.maps.LatLng(result[0].y,result[0].x);\n\n    //                 // 결과값으로 받은 위치를 마커로 표시합니다\n    //                 var marker = new window.kakao.maps.Marker({\n    //                     map: map,\n    //                     position: coords,\n    //                     // position: markerPosition, \n    //                     image: markerImage, // 마커이미지 설정\n    //                     clickable: true \n    //                 });\n    //                 console.log(\"c\"+coords);\n    //                 console.log(\"m\"+markerPosition);\n    //                 console.log('마커', marker.fa)\n    //                 window.myMarker = marker\n    //                 // 마커가 지도 위에 표시되도록 설정합니다.\n    //                 marker.setMap(map);\n\n    //                 // 인포윈도우로 장소에 대한 설명을 표시합니다\n    //                 // var infowindow = new  window.kakao.maps.InfoWindow({\n    //                 //     content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">종로 경로당</div>'\n    //                 // });\n    //                 // infowindow.open(map, marker);\n    //                 // 마커에 커서가 오버됐을 때 마커 위에 표시할 인포윈도우를 생성합니다\n    //                 var iwContent = '<div style=\"padding:5px;\">종로 경로당</div>'; // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n\n    //                 // 인포윈도우를 생성합니다\n    //                 var infowindow = new window.kakao.maps.InfoWindow({\n    //                     content : iwContent\n    //                 });\n\n    //                 // 마커에 마우스오버 이벤트를 등록합니다\n    //                 window.kakao.maps.event.addListener(marker, 'mouseover', function() {\n    //                 // 마커에 마우스오버 이벤트가 발생하면 인포윈도우를 마커위에 표시합니다\n    //                     infowindow.open(map, marker);\n    //                 });\n\n    //                 // 마커에 마우스아웃 이벤트를 등록합니다\n    //                 window.kakao.maps.event.addListener(marker, 'mouseout', function() {\n    //                     // 마커에 마우스아웃 이벤트가 발생하면 인포윈도우를 제거합니다\n    //                     infowindow.close();\n    //                 });\n    //                 // 마커에 클릭이벤트를 등록합니다\n    //                 window.kakao.maps.event.addListener(marker, 'click', function() {\n    //                     marker.fa.addEventListener(\"click\", function() {\n    //                         console.log('클릭되었습니다.')\n                            \n    //                 })\n    //                 });\n                \n    //             // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n    //                 map.setCenter(coords);\n    //                 console.log('12312412421')\n    //             } \n    //         });\n        // var map = new window.kakao.maps.Map(container, options);\n        // map.setMapTypeId(window.kakao.maps.MapTypeId.HYBRID);\n\n\n\n        // 다른 이미지로 마커 생성하기\n        // var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png', // 마커이미지의 주소입니다    \n        // imageSize = new window.kakao.maps.Size(64, 69), // 마커이미지의 크기입니다\n        // imageOption = {offset: new window.kakao.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n        // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\n        // var markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\n        //     markerPosition = new window.kakao.maps.LatLng(37.54699, 127.09598); // 마커가 표시될 위치입니다\n\n        // 마커를 생성합니다\n        // var marker = new window.kakao.maps.Marker({\n        //     position: markerPosition, \n        //     image: markerImage // 마커이미지 설정 \n        // });\n\n        // 마커가 지도 위에 표시되도록 설정합니다\n        // marker.setMap(map);\n\n        // }\n    // }\n    }\n</script>\n\n<style>\n#map {\n    width: 100%;\n    height: 100%;\n}\n.map-container{\n    height:  100%;\n}\n</style>"]}]}