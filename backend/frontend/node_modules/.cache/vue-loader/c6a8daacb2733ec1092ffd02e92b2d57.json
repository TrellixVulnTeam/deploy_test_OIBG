{"remainingRequest":"C:\\test\\S05P13B202-develope\\S05P13B202-develope\\backend\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\test\\S05P13B202-develope\\S05P13B202-develope\\backend\\frontend\\src\\views\\contents\\community\\components\\comment.vue?vue&type=style&index=0&id=1a5c424c&scoped=true&lang=css","dependencies":[{"path":"C:\\test\\S05P13B202-develope\\S05P13B202-develope\\backend\\frontend\\src\\views\\contents\\community\\components\\comment.vue","mtime":1629179798000},{"path":"C:\\test\\S05P13B202-develope\\S05P13B202-develope\\backend\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test\\S05P13B202-develope\\S05P13B202-develope\\backend\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1628298225000},{"path":"C:\\test\\S05P13B202-develope\\S05P13B202-develope\\backend\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\test\\S05P13B202-develope\\S05P13B202-develope\\backend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\test\\S05P13B202-develope\\S05P13B202-develope\\backend\\frontend\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmVsLWJ1dHRvbiB7CiAgICBtYXJnaW46IDE1cHg7CiAgICB3aWR0aDogMTUwcHg7CiAgICBoZWlnaHQ6IDUwcHg7CiAgICBiYWNrZ3JvdW5kOiAjRUJDODZGICFpbXBvcnRhbnQ7CiAgICBib3JkZXItcmFkaXVzOiAyNXB4ICFpbXBvcnRhbnQ7CiAgfQo="},{"version":3,"sources":["C:\\test\\S05P13B202-develope\\S05P13B202-develope\\backend\\frontend\\src\\views\\contents\\community\\components\\comment.vue"],"names":[],"mappings":";EAiHE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC","file":"C:/test/S05P13B202-develope/S05P13B202-develope/backend/frontend/src/views/contents/community/components/comment.vue","sourceRoot":"","sourcesContent":["<template>\n    <el-form-item>\n                  <el-input placeholder=\"댓글을 작성해주세요.\" v-model=\"state.form.commentContents\"></el-input>\n    </el-form-item>\n    <el-form-item >\n    <el-button @click=\"clickWriteComment\"> 댓글 달기</el-button>\n    </el-form-item>\n    <br>\n     <!--  :data=\"\" -->\n    <el-table\n    :show-header =false\n    :data=\"state.commentList\"\n    style=\"width: 100%\"\n    @current-change=\"handleCurrentChange\"\n    >\n    <el-table-column\n      prop=\"작성자\"\n      \n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"댓글내용\"\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n            > <!--v-if 사용해서 댓글쓴사람 == 현재 로그인된 사람 일때만 보여주기-->\n              <el-button @click=\"clickModifyComment\" type=\"danger\">수정</el-button>\n            </el-table-column>\n    <el-table-column\n            >\n              <el-button @click=\"clickDeleteComment\" type=\"danger\">삭제</el-button>\n            </el-table-column>\n  </el-table>\n \n      <!--<el-pagination\n      background\n      :page-size=\"pageSize\"\n      layout=\" prev, pager, next\"\n      :total=\"state.boardList.length\"\n      @current-change=\"setPage\"> \n    </el-pagination> -->\n\n</template>\n\n<script>\n  import { reactive } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\nprops: {\n      id : {\n        type : String,\n        default : '',\n      }\n  // comment : {\n  //   type : Array,\n  // }\n\n\n  // title : {\n  //   type: String,\n  //   default : '댓글창입니다.'\n  // }\n},\n\nsetup(props) {\n      const store = useStore()\n    const state = reactive({\n      commentList : [], // 댓글 받아온거\n      form : {\n       boardId : props.boardId,\n       commentContents : '', // v-model로 입력받음\n       // commentId :'', 자동 증가?\n\n     \n      } // 댓글 입력시 보낼 입력폼\n    })\n  console.log(props.title);\n\n    const clickWriteComment= () => {\n      store.dispatch('root/requestSubmitWrite', state.form)\n      .then(result =>{\n        console.log(result)\n\n      })\n       .catch((err) => {\n            store.commit('root/loadingOff')\n            alert(err)\n          })\n    }\n const clickModifyComment= () =>{\n    store.dispatch('root/requestUpdateComment',state.form) // stat.form에 넣을 것 : ~~~\n       .then(result =>{\n        console.log(result)\n\n      })\n }\n\n const clickDeleteComment= () =>{\n      const userId = store.getters['root/getMyId']\n         store.dispatch('root/requestDeleteWrite',{userId : userId, boardId : state.form.boardId, commentId : state.commentId,}) // `{boardId}?boardId=${state.form.boardId}`\n       .then(result =>{\n        console.log(result)\n        \n      })\n }\n\n  return {state,clickWriteComment, clickModifyComment, clickDeleteComment}\n}\n}\n</script>\n\n<style scoped>\n  .el-button {\n    margin: 15px;\n    width: 150px;\n    height: 50px;\n    background: #EBC86F !important;\n    border-radius: 25px !important;\n  }\n</style>"]}]}